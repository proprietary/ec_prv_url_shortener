// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: url_shortener.proto

#include "url_shortener.pb.h"

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
#include <algorithm>
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace ec_prv {
template <typename>
PROTOBUF_CONSTEXPR
ShortenUrlRequest::ShortenUrlRequest(::_pbi::ConstantInitialized)
    : _impl_{
          /*decltype(_impl_.long_url_)*/ {&::_pbi::fixed_address_empty_string,
                                          ::_pbi::ConstantInitialized{}}

          ,
          /*decltype(_impl_._cached_size_)*/ {}} {}
struct ShortenUrlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShortenUrlRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShortenUrlRequestDefaultTypeInternal() {}
  union {
    ShortenUrlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShortenUrlRequestDefaultTypeInternal
        _ShortenUrlRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR
ShortenedUrlResponse::ShortenedUrlResponse(::_pbi::ConstantInitialized)
    : _impl_{
          /*decltype(_impl_.short_url_)*/ {&::_pbi::fixed_address_empty_string,
                                           ::_pbi::ConstantInitialized{}}

          ,
          /*decltype(_impl_.long_url_)*/ {&::_pbi::fixed_address_empty_string,
                                          ::_pbi::ConstantInitialized{}}

          ,
          /*decltype(_impl_._cached_size_)*/ {}} {}
struct ShortenedUrlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShortenedUrlResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShortenedUrlResponseDefaultTypeInternal() {}
  union {
    ShortenedUrlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShortenedUrlResponseDefaultTypeInternal
        _ShortenedUrlResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR
UrlLookupRequest::UrlLookupRequest(::_pbi::ConstantInitialized)
    : _impl_{
          /*decltype(_impl_.short_url_)*/ {&::_pbi::fixed_address_empty_string,
                                           ::_pbi::ConstantInitialized{}}

          ,
          /*decltype(_impl_._cached_size_)*/ {}} {}
struct UrlLookupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UrlLookupRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UrlLookupRequestDefaultTypeInternal() {}
  union {
    UrlLookupRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UrlLookupRequestDefaultTypeInternal
        _UrlLookupRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR
UrlLookupResponse::UrlLookupResponse(::_pbi::ConstantInitialized)
    : _impl_{
          /*decltype(_impl_.short_url_)*/ {&::_pbi::fixed_address_empty_string,
                                           ::_pbi::ConstantInitialized{}}

          ,
          /*decltype(_impl_.long_url_)*/ {&::_pbi::fixed_address_empty_string,
                                          ::_pbi::ConstantInitialized{}}

          ,
          /*decltype(_impl_._cached_size_)*/ {}} {}
struct UrlLookupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UrlLookupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UrlLookupResponseDefaultTypeInternal() {}
  union {
    UrlLookupResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UrlLookupResponseDefaultTypeInternal
        _UrlLookupResponse_default_instance_;
} // namespace ec_prv
static ::_pb::Metadata file_level_metadata_url_5fshortener_2eproto[4];
static constexpr const ::_pb::EnumDescriptor *
    *file_level_enum_descriptors_url_5fshortener_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *
    *file_level_service_descriptors_url_5fshortener_2eproto = nullptr;
const ::uint32_t
    TableStruct_url_5fshortener_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u, // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ec_prv::ShortenUrlRequest, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        ~0u, // no _inlined_string_donated_
        ~0u, // no _split_
        ~0u, // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ec_prv::ShortenUrlRequest, _impl_.long_url_),
        ~0u, // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ec_prv::ShortenedUrlResponse,
                              _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        ~0u, // no _inlined_string_donated_
        ~0u, // no _split_
        ~0u, // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ec_prv::ShortenedUrlResponse,
                              _impl_.short_url_),
        PROTOBUF_FIELD_OFFSET(::ec_prv::ShortenedUrlResponse, _impl_.long_url_),
        ~0u, // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ec_prv::UrlLookupRequest, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        ~0u, // no _inlined_string_donated_
        ~0u, // no _split_
        ~0u, // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ec_prv::UrlLookupRequest, _impl_.short_url_),
        ~0u, // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ec_prv::UrlLookupResponse, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        ~0u, // no _inlined_string_donated_
        ~0u, // no _split_
        ~0u, // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ec_prv::UrlLookupResponse, _impl_.short_url_),
        PROTOBUF_FIELD_OFFSET(::ec_prv::UrlLookupResponse, _impl_.long_url_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ec_prv::ShortenUrlRequest)},
        {9, -1, -1, sizeof(::ec_prv::ShortenedUrlResponse)},
        {19, -1, -1, sizeof(::ec_prv::UrlLookupRequest)},
        {28, -1, -1, sizeof(::ec_prv::UrlLookupResponse)},
};

static const ::_pb::Message *const file_default_instances[] = {
    &::ec_prv::_ShortenUrlRequest_default_instance_._instance,
    &::ec_prv::_ShortenedUrlResponse_default_instance_._instance,
    &::ec_prv::_UrlLookupRequest_default_instance_._instance,
    &::ec_prv::_UrlLookupResponse_default_instance_._instance,
};
const char descriptor_table_protodef_url_5fshortener_2eproto
    [] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        "\n\023url_shortener.proto\022\006ec_prv\"%\n\021Shorten"
        "UrlRequest\022\020\n\010long_url\030\001 \001(\t\";\n\024Shortene"
        "dUrlResponse\022\021\n\tshort_url\030\001 \001(\t\022\020\n\010long_"
        "url\030\002 \001(\t\"%\n\020UrlLookupRequest\022\021\n\tshort_u"
        "rl\030\001 \001(\t\"8\n\021UrlLookupResponse\022\021\n\tshort_u"
        "rl\030\001 \001(\t\022\020\n\010long_url\030\002 "
        "\001(\t2\233\001\n\014UrlShorte"
        "ner\022G\n\nShortenUrl\022\031.ec_prv.ShortenUrlReq"
        "uest\032\034.ec_prv.ShortenedUrlResponse\"\000\022B\n\t"
        "LookupUrl\022\030.ec_prv.UrlLookupRequest\032\031.ec"
        "_prv.UrlLookupResponse\"\000b\006proto3"};
static ::absl::once_flag descriptor_table_url_5fshortener_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_url_5fshortener_2eproto = {
    false,
    false,
    392,
    descriptor_table_protodef_url_5fshortener_2eproto,
    "url_shortener.proto",
    &descriptor_table_url_5fshortener_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_url_5fshortener_2eproto::offsets,
    file_level_metadata_url_5fshortener_2eproto,
    file_level_enum_descriptors_url_5fshortener_2eproto,
    file_level_service_descriptors_url_5fshortener_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable *
descriptor_table_url_5fshortener_2eproto_getter() {
  return &descriptor_table_url_5fshortener_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_url_5fshortener_2eproto(
    &descriptor_table_url_5fshortener_2eproto);
namespace ec_prv {
// ===================================================================

class ShortenUrlRequest::_Internal {
public:
};

ShortenUrlRequest::ShortenUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena *arena)
    : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ec_prv.ShortenUrlRequest)
}
ShortenUrlRequest::ShortenUrlRequest(const ShortenUrlRequest &from)
    : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShortenUrlRequest *const _this = this;
  (void)_this;
  new (&_impl_) Impl_{decltype(_impl_.long_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.long_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_long_url().empty()) {
    _this->_impl_.long_url_.Set(from._internal_long_url(),
                                _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ec_prv.ShortenUrlRequest)
}

inline void ShortenUrlRequest::SharedCtor(::_pb::Arena *arena) {
  (void)arena;
  new (&_impl_) Impl_{decltype(_impl_.long_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};
  _impl_.long_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShortenUrlRequest::~ShortenUrlRequest() {
  // @@protoc_insertion_point(destructor:ec_prv.ShortenUrlRequest)
  if (auto *arena =
          _internal_metadata_
              .DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
    (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShortenUrlRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.long_url_.Destroy();
}

void ShortenUrlRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShortenUrlRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:ec_prv.ShortenUrlRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _impl_.long_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char *ShortenUrlRequest::_InternalParse(const char *ptr,
                                              ::_pbi::ParseContext *ctx) {
#define CHK_(x)                                                                \
  if (PROTOBUF_PREDICT_FALSE(!(x)))                                            \
  goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
    // string long_url = 1;
    case 1:
      if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
        auto str = _internal_mutable_long_url();
        ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
        CHK_(ptr);
        CHK_(::_pbi::VerifyUTF8(str, "ec_prv.ShortenUrlRequest.long_url"));
      } else {
        goto handle_unusual;
      }
      continue;
    default:
      goto handle_unusual;
    } // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_
            .mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  } // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t *ShortenUrlRequest::_InternalSerialize(
    ::uint8_t *target,
    ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec_prv.ShortenUrlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string long_url = 1;
  if (!this->_internal_long_url().empty()) {
    const std::string &_s = this->_internal_long_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ec_prv.ShortenUrlRequest.long_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_
            .unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
                ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance),
        target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec_prv.ShortenUrlRequest)
  return target;
}

::size_t ShortenUrlRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:ec_prv.ShortenUrlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  // string long_url = 1;
  if (!this->_internal_long_url().empty()) {
    total_size +=
        1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                this->_internal_long_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData
    ShortenUrlRequest::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
        ShortenUrlRequest::MergeImpl};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *
ShortenUrlRequest::GetClassData() const {
  return &_class_data_;
}

void ShortenUrlRequest::MergeImpl(
    ::PROTOBUF_NAMESPACE_ID::Message &to_msg,
    const ::PROTOBUF_NAMESPACE_ID::Message &from_msg) {
  auto *const _this = static_cast<ShortenUrlRequest *>(&to_msg);
  auto &from = static_cast<const ShortenUrlRequest &>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ec_prv.ShortenUrlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (!from._internal_long_url().empty()) {
    _this->_internal_set_long_url(from._internal_long_url());
  }
  _this->_internal_metadata_
      .MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
          from._internal_metadata_);
}

void ShortenUrlRequest::CopyFrom(const ShortenUrlRequest &from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:ec_prv.ShortenUrlRequest)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool ShortenUrlRequest::IsInitialized() const { return true; }

void ShortenUrlRequest::InternalSwap(ShortenUrlRequest *other) {
  using std::swap;
  auto *lhs_arena = GetArenaForAllocation();
  auto *rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_url_, lhs_arena,
                                       &other->_impl_.long_url_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShortenUrlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_url_5fshortener_2eproto_getter,
      &descriptor_table_url_5fshortener_2eproto_once,
      file_level_metadata_url_5fshortener_2eproto[0]);
}
// ===================================================================

class ShortenedUrlResponse::_Internal {
public:
};

ShortenedUrlResponse::ShortenedUrlResponse(
    ::PROTOBUF_NAMESPACE_ID::Arena *arena)
    : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ec_prv.ShortenedUrlResponse)
}
ShortenedUrlResponse::ShortenedUrlResponse(const ShortenedUrlResponse &from)
    : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShortenedUrlResponse *const _this = this;
  (void)_this;
  new (&_impl_) Impl_{decltype(_impl_.short_url_){}

                      ,
                      decltype(_impl_.long_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.short_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_short_url().empty()) {
    _this->_impl_.short_url_.Set(from._internal_short_url(),
                                 _this->GetArenaForAllocation());
  }
  _impl_.long_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_long_url().empty()) {
    _this->_impl_.long_url_.Set(from._internal_long_url(),
                                _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ec_prv.ShortenedUrlResponse)
}

inline void ShortenedUrlResponse::SharedCtor(::_pb::Arena *arena) {
  (void)arena;
  new (&_impl_) Impl_{decltype(_impl_.short_url_){}

                      ,
                      decltype(_impl_.long_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};
  _impl_.short_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShortenedUrlResponse::~ShortenedUrlResponse() {
  // @@protoc_insertion_point(destructor:ec_prv.ShortenedUrlResponse)
  if (auto *arena =
          _internal_metadata_
              .DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
    (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShortenedUrlResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.short_url_.Destroy();
  _impl_.long_url_.Destroy();
}

void ShortenedUrlResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShortenedUrlResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:ec_prv.ShortenedUrlResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _impl_.short_url_.ClearToEmpty();
  _impl_.long_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char *ShortenedUrlResponse::_InternalParse(const char *ptr,
                                                 ::_pbi::ParseContext *ctx) {
#define CHK_(x)                                                                \
  if (PROTOBUF_PREDICT_FALSE(!(x)))                                            \
  goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
    // string short_url = 1;
    case 1:
      if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
        auto str = _internal_mutable_short_url();
        ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
        CHK_(ptr);
        CHK_(::_pbi::VerifyUTF8(str, "ec_prv.ShortenedUrlResponse.short_url"));
      } else {
        goto handle_unusual;
      }
      continue;
    // string long_url = 2;
    case 2:
      if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
        auto str = _internal_mutable_long_url();
        ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
        CHK_(ptr);
        CHK_(::_pbi::VerifyUTF8(str, "ec_prv.ShortenedUrlResponse.long_url"));
      } else {
        goto handle_unusual;
      }
      continue;
    default:
      goto handle_unusual;
    } // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_
            .mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  } // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t *ShortenedUrlResponse::_InternalSerialize(
    ::uint8_t *target,
    ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec_prv.ShortenedUrlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string short_url = 1;
  if (!this->_internal_short_url().empty()) {
    const std::string &_s = this->_internal_short_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ec_prv.ShortenedUrlResponse.short_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string long_url = 2;
  if (!this->_internal_long_url().empty()) {
    const std::string &_s = this->_internal_long_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ec_prv.ShortenedUrlResponse.long_url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_
            .unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
                ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance),
        target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec_prv.ShortenedUrlResponse)
  return target;
}

::size_t ShortenedUrlResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:ec_prv.ShortenedUrlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  // string short_url = 1;
  if (!this->_internal_short_url().empty()) {
    total_size +=
        1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                this->_internal_short_url());
  }

  // string long_url = 2;
  if (!this->_internal_long_url().empty()) {
    total_size +=
        1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                this->_internal_long_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData
    ShortenedUrlResponse::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
        ShortenedUrlResponse::MergeImpl};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *
ShortenedUrlResponse::GetClassData() const {
  return &_class_data_;
}

void ShortenedUrlResponse::MergeImpl(
    ::PROTOBUF_NAMESPACE_ID::Message &to_msg,
    const ::PROTOBUF_NAMESPACE_ID::Message &from_msg) {
  auto *const _this = static_cast<ShortenedUrlResponse *>(&to_msg);
  auto &from = static_cast<const ShortenedUrlResponse &>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ec_prv.ShortenedUrlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (!from._internal_short_url().empty()) {
    _this->_internal_set_short_url(from._internal_short_url());
  }
  if (!from._internal_long_url().empty()) {
    _this->_internal_set_long_url(from._internal_long_url());
  }
  _this->_internal_metadata_
      .MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
          from._internal_metadata_);
}

void ShortenedUrlResponse::CopyFrom(const ShortenedUrlResponse &from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:ec_prv.ShortenedUrlResponse)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool ShortenedUrlResponse::IsInitialized() const { return true; }

void ShortenedUrlResponse::InternalSwap(ShortenedUrlResponse *other) {
  using std::swap;
  auto *lhs_arena = GetArenaForAllocation();
  auto *rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_url_, lhs_arena,
                                       &other->_impl_.short_url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_url_, lhs_arena,
                                       &other->_impl_.long_url_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShortenedUrlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_url_5fshortener_2eproto_getter,
      &descriptor_table_url_5fshortener_2eproto_once,
      file_level_metadata_url_5fshortener_2eproto[1]);
}
// ===================================================================

class UrlLookupRequest::_Internal {
public:
};

UrlLookupRequest::UrlLookupRequest(::PROTOBUF_NAMESPACE_ID::Arena *arena)
    : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ec_prv.UrlLookupRequest)
}
UrlLookupRequest::UrlLookupRequest(const UrlLookupRequest &from)
    : ::PROTOBUF_NAMESPACE_ID::Message() {
  UrlLookupRequest *const _this = this;
  (void)_this;
  new (&_impl_) Impl_{decltype(_impl_.short_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.short_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_short_url().empty()) {
    _this->_impl_.short_url_.Set(from._internal_short_url(),
                                 _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ec_prv.UrlLookupRequest)
}

inline void UrlLookupRequest::SharedCtor(::_pb::Arena *arena) {
  (void)arena;
  new (&_impl_) Impl_{decltype(_impl_.short_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};
  _impl_.short_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UrlLookupRequest::~UrlLookupRequest() {
  // @@protoc_insertion_point(destructor:ec_prv.UrlLookupRequest)
  if (auto *arena =
          _internal_metadata_
              .DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
    (void)arena;
    return;
  }
  SharedDtor();
}

inline void UrlLookupRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.short_url_.Destroy();
}

void UrlLookupRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UrlLookupRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:ec_prv.UrlLookupRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _impl_.short_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char *UrlLookupRequest::_InternalParse(const char *ptr,
                                             ::_pbi::ParseContext *ctx) {
#define CHK_(x)                                                                \
  if (PROTOBUF_PREDICT_FALSE(!(x)))                                            \
  goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
    // string short_url = 1;
    case 1:
      if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
        auto str = _internal_mutable_short_url();
        ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
        CHK_(ptr);
        CHK_(::_pbi::VerifyUTF8(str, "ec_prv.UrlLookupRequest.short_url"));
      } else {
        goto handle_unusual;
      }
      continue;
    default:
      goto handle_unusual;
    } // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_
            .mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  } // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t *UrlLookupRequest::_InternalSerialize(
    ::uint8_t *target,
    ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec_prv.UrlLookupRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string short_url = 1;
  if (!this->_internal_short_url().empty()) {
    const std::string &_s = this->_internal_short_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ec_prv.UrlLookupRequest.short_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_
            .unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
                ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance),
        target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec_prv.UrlLookupRequest)
  return target;
}

::size_t UrlLookupRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:ec_prv.UrlLookupRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  // string short_url = 1;
  if (!this->_internal_short_url().empty()) {
    total_size +=
        1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                this->_internal_short_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData
    UrlLookupRequest::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
        UrlLookupRequest::MergeImpl};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *
UrlLookupRequest::GetClassData() const {
  return &_class_data_;
}

void UrlLookupRequest::MergeImpl(
    ::PROTOBUF_NAMESPACE_ID::Message &to_msg,
    const ::PROTOBUF_NAMESPACE_ID::Message &from_msg) {
  auto *const _this = static_cast<UrlLookupRequest *>(&to_msg);
  auto &from = static_cast<const UrlLookupRequest &>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ec_prv.UrlLookupRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (!from._internal_short_url().empty()) {
    _this->_internal_set_short_url(from._internal_short_url());
  }
  _this->_internal_metadata_
      .MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
          from._internal_metadata_);
}

void UrlLookupRequest::CopyFrom(const UrlLookupRequest &from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:ec_prv.UrlLookupRequest)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool UrlLookupRequest::IsInitialized() const { return true; }

void UrlLookupRequest::InternalSwap(UrlLookupRequest *other) {
  using std::swap;
  auto *lhs_arena = GetArenaForAllocation();
  auto *rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_url_, lhs_arena,
                                       &other->_impl_.short_url_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata UrlLookupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_url_5fshortener_2eproto_getter,
      &descriptor_table_url_5fshortener_2eproto_once,
      file_level_metadata_url_5fshortener_2eproto[2]);
}
// ===================================================================

class UrlLookupResponse::_Internal {
public:
};

UrlLookupResponse::UrlLookupResponse(::PROTOBUF_NAMESPACE_ID::Arena *arena)
    : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ec_prv.UrlLookupResponse)
}
UrlLookupResponse::UrlLookupResponse(const UrlLookupResponse &from)
    : ::PROTOBUF_NAMESPACE_ID::Message() {
  UrlLookupResponse *const _this = this;
  (void)_this;
  new (&_impl_) Impl_{decltype(_impl_.short_url_){}

                      ,
                      decltype(_impl_.long_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.short_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_short_url().empty()) {
    _this->_impl_.short_url_.Set(from._internal_short_url(),
                                 _this->GetArenaForAllocation());
  }
  _impl_.long_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_long_url().empty()) {
    _this->_impl_.long_url_.Set(from._internal_long_url(),
                                _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ec_prv.UrlLookupResponse)
}

inline void UrlLookupResponse::SharedCtor(::_pb::Arena *arena) {
  (void)arena;
  new (&_impl_) Impl_{decltype(_impl_.short_url_){}

                      ,
                      decltype(_impl_.long_url_){}

                      ,
                      /*decltype(_impl_._cached_size_)*/ {}};
  _impl_.short_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UrlLookupResponse::~UrlLookupResponse() {
  // @@protoc_insertion_point(destructor:ec_prv.UrlLookupResponse)
  if (auto *arena =
          _internal_metadata_
              .DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
    (void)arena;
    return;
  }
  SharedDtor();
}

inline void UrlLookupResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.short_url_.Destroy();
  _impl_.long_url_.Destroy();
}

void UrlLookupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UrlLookupResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:ec_prv.UrlLookupResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _impl_.short_url_.ClearToEmpty();
  _impl_.long_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char *UrlLookupResponse::_InternalParse(const char *ptr,
                                              ::_pbi::ParseContext *ctx) {
#define CHK_(x)                                                                \
  if (PROTOBUF_PREDICT_FALSE(!(x)))                                            \
  goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
    // string short_url = 1;
    case 1:
      if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
        auto str = _internal_mutable_short_url();
        ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
        CHK_(ptr);
        CHK_(::_pbi::VerifyUTF8(str, "ec_prv.UrlLookupResponse.short_url"));
      } else {
        goto handle_unusual;
      }
      continue;
    // string long_url = 2;
    case 2:
      if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
        auto str = _internal_mutable_long_url();
        ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
        CHK_(ptr);
        CHK_(::_pbi::VerifyUTF8(str, "ec_prv.UrlLookupResponse.long_url"));
      } else {
        goto handle_unusual;
      }
      continue;
    default:
      goto handle_unusual;
    } // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_
            .mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  } // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t *UrlLookupResponse::_InternalSerialize(
    ::uint8_t *target,
    ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ec_prv.UrlLookupResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string short_url = 1;
  if (!this->_internal_short_url().empty()) {
    const std::string &_s = this->_internal_short_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ec_prv.UrlLookupResponse.short_url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string long_url = 2;
  if (!this->_internal_long_url().empty()) {
    const std::string &_s = this->_internal_long_url();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ec_prv.UrlLookupResponse.long_url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_
            .unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
                ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance),
        target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ec_prv.UrlLookupResponse)
  return target;
}

::size_t UrlLookupResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:ec_prv.UrlLookupResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  // string short_url = 1;
  if (!this->_internal_short_url().empty()) {
    total_size +=
        1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                this->_internal_short_url());
  }

  // string long_url = 2;
  if (!this->_internal_long_url().empty()) {
    total_size +=
        1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                this->_internal_long_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData
    UrlLookupResponse::_class_data_ = {
        ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
        UrlLookupResponse::MergeImpl};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *
UrlLookupResponse::GetClassData() const {
  return &_class_data_;
}

void UrlLookupResponse::MergeImpl(
    ::PROTOBUF_NAMESPACE_ID::Message &to_msg,
    const ::PROTOBUF_NAMESPACE_ID::Message &from_msg) {
  auto *const _this = static_cast<UrlLookupResponse *>(&to_msg);
  auto &from = static_cast<const UrlLookupResponse &>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ec_prv.UrlLookupResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (!from._internal_short_url().empty()) {
    _this->_internal_set_short_url(from._internal_short_url());
  }
  if (!from._internal_long_url().empty()) {
    _this->_internal_set_long_url(from._internal_long_url());
  }
  _this->_internal_metadata_
      .MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
          from._internal_metadata_);
}

void UrlLookupResponse::CopyFrom(const UrlLookupResponse &from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:ec_prv.UrlLookupResponse)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool UrlLookupResponse::IsInitialized() const { return true; }

void UrlLookupResponse::InternalSwap(UrlLookupResponse *other) {
  using std::swap;
  auto *lhs_arena = GetArenaForAllocation();
  auto *rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_url_, lhs_arena,
                                       &other->_impl_.short_url_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_url_, lhs_arena,
                                       &other->_impl_.long_url_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata UrlLookupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_url_5fshortener_2eproto_getter,
      &descriptor_table_url_5fshortener_2eproto_once,
      file_level_metadata_url_5fshortener_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
} // namespace ec_prv
PROTOBUF_NAMESPACE_OPEN
template <>
PROTOBUF_NOINLINE ::ec_prv::ShortenUrlRequest *
Arena::CreateMaybeMessage<::ec_prv::ShortenUrlRequest>(Arena *arena) {
  return Arena::CreateMessageInternal<::ec_prv::ShortenUrlRequest>(arena);
}
template <>
PROTOBUF_NOINLINE ::ec_prv::ShortenedUrlResponse *
Arena::CreateMaybeMessage<::ec_prv::ShortenedUrlResponse>(Arena *arena) {
  return Arena::CreateMessageInternal<::ec_prv::ShortenedUrlResponse>(arena);
}
template <>
PROTOBUF_NOINLINE ::ec_prv::UrlLookupRequest *
Arena::CreateMaybeMessage<::ec_prv::UrlLookupRequest>(Arena *arena) {
  return Arena::CreateMessageInternal<::ec_prv::UrlLookupRequest>(arena);
}
template <>
PROTOBUF_NOINLINE ::ec_prv::UrlLookupResponse *
Arena::CreateMaybeMessage<::ec_prv::UrlLookupResponse>(Arena *arena) {
  return Arena::CreateMessageInternal<::ec_prv::UrlLookupResponse>(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
